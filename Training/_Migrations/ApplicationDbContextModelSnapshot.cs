// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Training.Models;

namespace Training.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Training.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descr");

                    b.Property<int>("Duration");

                    b.Property<string>("Name");

                    b.Property<string>("Program");

                    b.HasKey("Id");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("Training.Models.TrainingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TrainingGroup");
                });

            modelBuilder.Entity("Training.Models.TrainingGroupTraining", b =>
                {
                    b.Property<int>("TrainingId");

                    b.Property<int>("TrainingGroupId");

                    b.HasKey("TrainingId", "TrainingGroupId");

                    b.HasIndex("TrainingGroupId");

                    b.ToTable("TrainingGroupTraining");
                });

            modelBuilder.Entity("Training.Models.TrainingGroupTraining", b =>
                {
                    b.HasOne("Training.Models.TrainingGroup", "TrainingGroup")
                        .WithMany("TrainingGroupTraining")
                        .HasForeignKey("TrainingGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Training.Models.Training", "Training")
                        .WithMany("TrainingGroupTraining")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
